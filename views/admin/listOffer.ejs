<%- include('../adminLayouts/header.ejs') %>
    <%- include('../adminLayouts/navbar.ejs') %>

        <style>
            /* main.css */
            .table-responsive {
                overflow-x: auto;
                margin-top: 30px;
                margin-left: 20px;
                margin-right: 20px;

            }

            table {
                width: 100%;
                border-collapse: collapse;
            }

            th,
            td {
                padding: 20px;
                border: 1px solid #ddd;
                text-align: left;
                text-align: center;
            }

            /* Media query for smaller screens */
            @media screen and (max-width: 600px) {

                table,
                thead,
                tbody,
                th,
                td,
                tr {
                    display: block;
                }

                thead tr {
                    position: absolute;
                    top: -9999px;
                    left: -9999px;
                }

                tr {
                    border: 1px solid #ddd;
                }

                td {
                    border: none;
                    border-bottom: 1px solid #ddd;
                    position: relative;
                    padding-left: 50%;
                }

                td:before {
                    position: absolute;
                    top: 6px;
                    left: 6px;
                    width: 45%;
                    padding-right: 10px;
                    white-space: nowrap;
                }

                /* Label the data */
                td:nth-of-type(1):before {
                    content: "#:";
                }

                td:nth-of-type(2):before {
                    content: "Offer Name:";
                }

                td:nth-of-type(3):before {
                    content: "Starting Date:";
                }

                td:nth-of-type(4):before {
                    content: "Ending Date:";
                }

                td:nth-of-type(5):before {
                    content: "Discount:";
                }

                td:nth-of-type(6):before {
                    content: "Action:";
                }


            }

            /* Modal colors */
            .modal-content {
                background-color: #ffffff;
                color: #000000;

            }

            .modal-header {
                background-color: #088178;
            }

            .text-danger {
                color: #dc3545;
                font-weight: bold;
                margin-top: 5px;
            }
        </style>

        <div style="text-align: center;">
            <h2>Offer Management</h2>
        </div>
        <div style="text-align: end; margin-right: 20px;">
            <a href="/admin/offer/addOffer" class="btn btn-primary ">Add Offer</a>
        </div>
        <div class="table-responsive">
            <% if (offers.length===0) { %>
                <div class="alert alert-info" role="alert">
                    No offer found.Please add offer.
                </div>

                <% } else { %>

                    <br>
                    <table>
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Offer Name</th>
                                <th>Starting Date</th>
                                <th>Ending Date</th>
                                <th>Discount</th>
                                <th>Action</th>

                            </tr>
                        </thead>
                        <tbody>
                            <% offers.forEach((offer,index)=> { %>
                                <tr>
                                    <td>
                                        <%= index+1%>
                                    </td>
                                    <td>
                                        <%= offer.offerName %>
                                    </td>
                                    <td>
                                        <%= offer.startingDate.toDateString() %>
                                    </td>
                                    <td>
                                        <%= offer.endingDate.toDateString() %>

                                    </td>
                                    <td>
                                        <%= offer.discount %>

                                    </td>

                                    <td>
                                        <button type="button" class="btn btn-sm btn-info" data-toggle="modal"
                                            data-target="#editOfferModal-<%= offer._id %>">
                                            Edit Offer
                                        </button>


                                        <a href="#" class="btn btn-sm btn-danger"
                                            onclick="deleteoffer('<%= offer._id %>')">Delete</a>

                                    </td>
                                </tr>
                                <% }); %>
                        </tbody>
                    </table>
                    <% } %>
                        <!-- Edit offer Modal -->
                        <% offers.forEach((offer,index)=> { %>
                            <div class="modal fade" id="editOfferModal-<%= offer._id %>" tabindex="-1" role="dialog"
                                aria-labelledby="editOfferModalLabel" aria-hidden="true">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="editOfferModalLabel">Edit offer</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            <form id="editOfferForm-<%= offer._id %>" novalidate>

                                                <div class="form-group">
                                                    <label for="editofferName">offer Name</label>
                                                    <input type="text" class="form-control" id="editofferName"
                                                        name="offerName" value="<%=  offer.offerName %>">
                                                    <small id="editofferName-error" class="text-danger"></small>
                                                </div>
                                                <div class="form-group">
                                                    <label for="editStartingDate">Starting Date</label>
                                                    <input type="date" class="form-control" id="editStartingDate"
                                                        name="startingDate"
                                                        value="<%= offer.startingDate.toISOString().split('T')[0] %>">
                                                    <small id="editStartingDate-error" class="text-danger"></small>
                                                </div>
                                                <div class="form-group">
                                                    <label for="editEndingDate">Ending Date</label>
                                                    <input type="date" class="form-control" id="editEndingDate"
                                                        name="endingDate"
                                                        value="<%= offer.endingDate.toISOString().split('T')[0] %>">
                                                    <small id="editEndingDate-error" class="text-danger"></small>
                                                </div>
                                                <div class="form-group">
                                                    <label for="editDiscount">Discount</label>
                                                    <input type="number" class="form-control" id="editDiscount"
                                                        name="discount" value="<%=  offer.discount %>">
                                                    <small id="editDiscount-error" class="text-danger"></small>
                                                </div>

                                                <br>
                                                <button type="submit" class="btn btn-primary"
                                                    style="display: block; margin: 0 auto;" id="updateoffer">Save
                                                    changes</button>
                                                <br>
                                                <div class="error-message" id="form-errors" style="text-align: center;"></div>


                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <% }); %>

        </div>
        <br>
        <br>
        <br>

        <%- include('../adminLayouts/footer.ejs') %>
            <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

            <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>


            <script>
                function deleteoffer(offerId) {
                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'You will not be able to recover this offer!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'No, cancel!',
                        reverseButtons: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            axios.delete(`/admin/offer/deleteOffer/${offerId}`)
                                .then(response => {
                                    console.log(response.data);
                                    Swal.fire(
                                        'Deleted!',
                                        'Your offer has been deleted.',
                                        'success'
                                    );
                                    setTimeout(() => {
                                        location.reload();
                                    }, 1000);
                                })
                                .catch(error => {
                                    console.error('Error deleting offer:', error);
                                    Swal.fire(
                                        'Error!',
                                        'An error occurred while deleting the offer.',
                                        'error'
                                    );
                                });
                        } else if (result.dismiss === Swal.DismissReason.cancel) {
                            Swal.fire(
                                'Cancelled',
                                'Your offer is safe :)',
                                'error'
                            );
                        }
                    });
                }

                $(document).ready(function () {


                    $('.edit-offer-btn').click(function (event) {
                        event.preventDefault();
                        var offerId = $(this).data('offer-id');
                        $('.edit-offer-modal[data-offer-id="' + offerId + '"]').modal('show');
                    });


                    $('form[id^="editOfferForm-"]').submit(function (event) {
                        event.preventDefault();
                        var offerId = $(this).attr('id').split('-')[1];
                        // Reset error messages
                        $(this).find('.text-danger').text('');

                        // Validation
                        const editofferName = $(this).find('#editofferName').val().trim();
                        const editDiscount = $(this).find('#editDiscount').val().trim();
                        const editEndingDate = $(this).find('#editEndingDate').val().trim();
                        const editStartingDate = $(this).find('#editStartingDate').val().trim();

                        let isValid = true;

                        if (editofferName === '') {
                            $(this).find('#editofferName-error').text('Please enter the offer name.');
                            isValid = false;
                        }

                        if (editDiscount === '') {
                            $(this).find('#editDiscount-error').text('Please enter the offer discount.');
                            isValid = false;
                        }

                        if (editEndingDate === '') {
                            $(this).find('#editEndingDate-error').text('Please enter the offer ending date.');
                            isValid = false;
                        }
                        if (editStartingDate === '') {
                            $(this).find('#editStartingDate-error').text('Please enter the offer starting date.');
                            isValid = false;
                        }

                        const today = new Date();
                        today.setHours(0, 0, 0, 0); // Set time to start of day for accurate comparison

                        if (editStartingDate && editEndingDate) {
                            if (new Date(editStartingDate) < today) {
                                $(this).find('#editStartingDate-error').text('Starting date must be greater than or equal to today');
                                isValid = false;
                            }
                            if (new Date(editEndingDate) < today) {
                                $(this).find('#editEndingDate-error').text('Ending date must be greater than or equal to today');
                                isValid = false;
                            }
                            if (new Date(editStartingDate) > new Date(editEndingDate)) {
                                $(this).find('#editStartingDate-error').text('Starting date must be less than or equal to ending date');
                                isValid = false;
                            }
                        }

                        if (!isValid) {
                            return;
                        }

                        // Form data
                        const formData = {
                            offerName: editofferName,
                            discount: parseFloat(editDiscount),
                            startingDate: editStartingDate,
                            endingDate: editEndingDate,
                        };

                        // Send data to server for editing
                        axios.put(`/admin/offer/editOffer/${offerId}`, formData)
                            .then(function (response) {
                                const data = response.data;
                                if (data.success) {
                                    // Show a success message using SweetAlert2
                                    const Toast = Swal.mixin({
                                        toast: true,
                                        position: "top-end",
                                        showConfirmButton: false,
                                        timer: 3000,
                                        timerProgressBar: true,
                                        didOpen: (toast) => {
                                            toast.onmouseenter = Swal.stopTimer;
                                            toast.onmouseleave = Swal.resumeTimer;
                                        }
                                    });
                                    Toast.fire({
                                        icon: "success",
                                        title: 'Success!',
                                        text: 'offer added successfully',
                                    });
                                    setTimeout(() => {
                                        location.reload();
                                    }, 2000);
                                }
                            })
                            .catch(err => {
                                if (err.response && err.response.data && !err.response.data.success) {
                                    var modalButton = $(`#editOfferModal-${offerId} .btn-primary`);
                                    var errorMessage = $('#form-errors').text(err.response.data.message);
                                    modalButton.after(errorMessage);
                                } else {
                                    console.error(err);
                                }
                            });

                    });
                });

            </script>