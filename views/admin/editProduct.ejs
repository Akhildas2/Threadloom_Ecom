<%- include('../adminLayouts/header.ejs') %>
    <%- include('../adminLayouts/navbar.ejs') %>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
        <section class="content-main">
            <div class="container">
                <div class="content-header" style="display: block;text-align: center;">
                    <h2 class="content-title card-title">Edit Product</h2>
                </div>
                <h4 class="content-title card-title">Edit an existing product</h4>

                <div class="card">
                    <div class="card-body">
                        <form enctype="multipart/form-data" class="product-form" id="editProduct">
                            <div class="form-group">
                                <label for="name">Name</label>
                                <input type="text" class="form-control" id="name" name="name"
                                    value="<%= product.name %>">
                                <div class="error-message" id="name-error"></div>
                            </div>
                            <div class="form-group">
                                <label for="description">Description</label>
                                <textarea class="form-control" id="description" name="description"
                                    rows="3"><%= product.description %></textarea>
                                <div class="error-message" id="description-error"></div>
                            </div>
                            <div class="form-group">
                                <label for="brand">Brand</label>
                                <select class="form-control" id="brand" name="brand">
                                    <option value="The Retro" <%=product.brand==='The Retro' ? 'selected' : '' %>>The
                                        Retro</option>
                                    <option value="Design Hub" <%=product.brand==='Design Hub' ? 'selected' : '' %>
                                        >Design Hub</option>
                                    <option value="Travel" <%=product.brand==='Travel' ? 'selected' : '' %>>Travel
                                    </option>
                                    <option value="Mockup" <%=product.brand==='Mockup' ? 'selected' : '' %>>Mockup
                                    </option>
                                    <option value="The Backyard" <%=product.brand==='The Backyard' ? 'selected' : '' %>
                                        >The Backyard</option>
                                    <option value="Shutter Speed" <%=product.brand==='Shutter Speed' ? 'selected' : ''
                                        %>>Shutter Speed</option>
                                    <option value="Hipster" <%=product.brand==='Hipster' ? 'selected' : '' %>>Hipster
                                    </option>
                                    <option value="New Wave" <%=product.brand==='New Wave' ? 'selected' : '' %>>New Wave
                                    </option>
                                </select>
                                <div class="error-message" id="brand-error"></div>
                            </div>
                            <div class="form-group">
                                <label for="price">Price</label>
                                <input type="number" class="form-control" id="price" name="price"
                                    value="<%= product.price %>">
                                <div class="error-message" id="price-error"></div>
                            </div>

                            <div class="form-group">
                                <label for="gender">Gender</label>
                                <select class="form-control" id="gender" name="gender">
                                    <option value="Men" <%=product.gender==='Men' ? ' selected' : '' %>>Men</option>
                                    <option value="Women" <%=product.gender==='Women' ? ' selected' : '' %>>Women
                                    </option>
                                    <option value="Kids" <%=product.gender==='Kids' ? ' selected' : '' %>>Kids</option>
                                </select>
                                <div class="error-message" id="gender-error"></div>
                            </div>

                            <div class="form-group">
                                <label for="category">Category</label>
                                <select class="form-control" id="category" name="category">
                                    <% categories.forEach(cat=> { %>
                                        <% if (product.category.categoryName===cat.categoryName) { %>
                                            <option value="<%= cat._id %>" selected>
                                                <%= cat.categoryName %>
                                            </option>
                                            <% } else { %>
                                                <option value="<%= cat._id %>">
                                                    <%= cat.categoryName %>
                                                </option>
                                                <% } %>
                                                    <% }); %>
                                </select>

                                <div class="error-message" id="category-error"></div>
                            </div>
                            <div class="form-group">
                                <label for="stockCount">Stock Count</label>
                                <input type="number" class="form-control" id="stockCount" name="stockCount"
                                    value="<%= product.stockCount %>">
                                <div class="error-message" id="stockCount-error"></div>
                            </div>
                            <div class="form-group">
                                <label for="size">Size</label>
                                <select class="form-control" id="size" name="size">
                                    <option value="S" <%=product.size==='S' ? 'selected' : '' %>>S</option>
                                    <option value="M" <%=product.size==='M' ? 'selected' : '' %>>M</option>
                                    <option value="L" <%=product.size==='L' ? 'selected' : '' %>>L</option>
                                    <option value="XL" <%=product.size==='XL' ? 'selected' : '' %>>XL</option>
                                    <option value="XXL" <%=product.size==='XXL' ? 'selected' : '' %>>XXL</option>
                                </select>
                                <div class="error-message" id="size-error"></div>
                            </div>
                            <div class="form-group">
                                <label for="fit">Fit</label>
                                <input type="text" class="form-control" id="fit" name="fit" value="<%= product.fit %>">
                                <div class="error-message" id="fit-error"></div>
                            </div>
                            <div class="form-group">
                                <label for="fabric">Fabric</label>
                                <input type="text" class="form-control" id="fabric" name="fabric"
                                    value="<%= product.fabric %>">
                                <div class="error-message" id="fabric-error"></div>

                            </div>

                            <div class="form-group">
                                <label for="sleeve">Sleeve</label>
                                <select class="form-control" id="sleeve" name="sleeve">
                                    <option value="Full Sleeve" <%=product.sleeve==='Full Sleeve' ? 'selected' : '' %>
                                        >Full Sleeve</option>
                                    <option value="Half Sleeve" <%=product.sleeve==='Half Sleeve' ? 'selected' : '' %>
                                        >Half Sleeve</option>
                                    <option value="Sleeveless" <%=product.sleev==='Sleeveless' ? 'selected' : '' %>
                                        >Sleeveless</option>
                                </select>
                                <div class="error-message" id="sleeve-error"></div>
                            </div>

                            <div class="form-group">
                                <label for="pattern">Pattern</label>
                                <input type="text" class="form-control" id="pattern" name="pattern"
                                    value="<%= product.pattern %>">
                                <div class="error-message" id="pattern-error"></div>
                            </div>
                            <div class="form-group">
                                <label for="color">Color</label>
                                <input type="text" class="form-control" id="color" name="color"
                                    value="<%= product.color %>">
                                <div class="error-message" id="color-error"></div>
                            </div>
                            <div class="form-group">
                                <label for="fabricCare">Fabric Care</label>
                                <input type="text" class="form-control" id="fabricCare" name="fabricCare"
                                    value="<%= product.fabricCare %>">
                                <div class="error-message" id="fabricCare-error"></div>
                            </div>
                            <div class="form-group">
                                <label for="origin">Origin</label>
                                <input type="text" class="form-control" id="origin" name="origin"
                                    value="<%= product.origin %>">
                                <div class="error-message" id="origin-error"></div>
                            </div>
                            <div class="form-group">
                                <label for="product-status">Product Status</label>
                                <select class="form-control" id="productStatus" name="productStatus">
                                    <option value="" <%=(!product.isHot && !product.isNewArrival &&
                                        !product.isBestSeller) ? 'selected' : '' %>>-----Choose Product Status-----
                                    </option>
                                    <option value="isHot" <%=product.isHot ? 'selected' : '' %>>Featured</option>
                                    <option value="isNewArrival" <%=product.isNewArrival ? 'selected' : '' %>>New
                                        Arrival</option>
                                    <option value="isBestSeller" <%=product.isBestSeller ? 'selected' : '' %>>Best
                                        Seller</option>
                                </select>
                                <div class="error-message" id="productStatus-error"></div>
                            </div>

                            <br>

                            <div class="form-group ">
                                <label for="productImages" style="display: block; text-align: center;">Product
                                    Images</label>
                                <br>
                                <div class='wrapper'>
                                    <div class="upload">
                                        <div class="upload-wrapper">
                                            <div class="upload-img">
                                                <!-- image here -->
                                            </div>
                                            <div class="upload-info">
                                                <p>
                                                    <span class="upload-info-value">0</span> file(s) uploaded.
                                                </p>
                                            </div>
                                            <div class="upload-area">
                                                <div class="upload-area-img">

                                                </div>
                                                <p class="upload-area-text">Select images or <span>browse</span>.</p>
                                            </div>
                                            <input type="file" class="visually-hidden" id="productImages"
                                                name="productImages" accept="image/*" multiple>
                                        </div>
                                    </div>
                                </div>


                                <br>
                                <button type="submit" class="btn btn-primary"
                                    style="display: block; margin: 0 auto;">Save Changes</button>
                        </form>
                    </div>
                </div>
            </div>
            <input type="hidden" name="imageOrder" id="imageOrder" value="<%= product.productImage.join(',') %>">
            <div class="card mt-4">
                <div class="card-body">
                    <div class="d-flex justify-content-end">
                        <button id="changeOrderBtn" class="btn btn-md btn-primary">Change Order</button>
                    </div>
                    <div class="row mt-4" id="imageSortable">
                        <% for (let i=0; i < product.productImage.length; i++) { %>
                            <div class="col-lg-3 col-md-3 col-sm-6 col-6">
                                <div class="card">
                                    <img src="/uploads/product/resized/<%= product.productImage[i] %>"
                                        data-filename="<%= product.productImage[i] %>" class="card-img-top img-fluid"
                                        style="cursor: pointer; width:100%; height:200px; object-fit:fill;">
                                    <span class="badge rounded-pill ">
                                        <button onclick="moveImageUp(this)" class="btn btn-secondary">
                                            <i class="fas fa-arrow-up"></i>
                                        </button>
                                        <button onclick="moveImageDown(this)" class="btn btn-secondary">
                                            <i class="fas fa-arrow-down"></i>
                                        </button>
                                    </span>
                                    <div class="card-body text-center">
                                        <button
                                            onclick="deleteImage('<%= product._id %>', '<%= product.productImage[i] %>', '<%= product.productImage.length %>')"
                                            class="btn btn-danger"
                                            aria-label="Delete Image <%= i + 1 %>">Delete</button>

                                    </div>
                                </div>
                            </div>
                            <% } %>
                    </div>
                </div>
            </div>

        </section>

        <%- include('../adminLayouts/footer.ejs') %>




            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
            <!-- Add Axios -->
            <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
            <script src="https://code.jquery.com/jquery-3.6.3.js"
                integrity="sha256-nQLuAZGRRcILA+6dMBOvcRh5Pe310sBpanc6+QBmyVM=" crossorigin="anonymous"></script>
            <script>
                // Define regular expressions and error messages
                const priceRegex = /^\d+(\.\d{1,2})?$/;

                let addedFiles = [];


                function moveImageUp(button) {
                    const column = button.closest('.col-lg-3');
                    const row = document.getElementById('imageSortable');
                    const currentIndex = Array.from(row.children).indexOf(column);
                    if (currentIndex > 0) {
                        row.insertBefore(column, row.children[currentIndex - 1]);
                        updateImageOrder();
                    }
                }

                function moveImageDown(button) {
                    const column = button.closest('.col-lg-3');
                    const row = document.getElementById('imageSortable');
                    const currentIndex = Array.from(row.children).indexOf(column);
                    if (currentIndex < row.children.length - 1) {
                        row.insertBefore(column.nextElementSibling, column);
                        updateImageOrder();
                    }
                }

                function updateImageOrder() {
                    const row = document.getElementById('imageSortable');
                    const images = row.querySelectorAll('img[data-filename]');
                    const order = Array.from(images).map(img => img.dataset.filename);
                    document.getElementById('imageOrder').value = order.join(',');
                }

                document.getElementById('changeOrderBtn').addEventListener('click', function () {
                    const productId = "<%= product._id %>";
                    const newOrder = document.getElementById('imageOrder').value;

                    axios.put('/admin/product/updateImageOrder', { productId, newOrder })
                        .then(res => {
                            if (res.data.status) {
                                Swal.fire({
                                    icon: "success",
                                    title: "Image order updated successfully!",
                                    showConfirmButton: false,
                                    timer: 2000
                                });
                                setTimeout(() => {
                                    location.reload()
                                }, 2000);
                            }
                        })
                        .catch(err => {
                            if (err.response && err.response.data && !err.response.data.success) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: err.response.data.message,
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Something went wrong!',
                                });
                            }
                        });
                });


                $(document).ready(function () {
                    $(".upload-area").click(function () {
                        $('#productImages').trigger('click');
                    });

                    $('#productImages').change(function (event) {
                        if (event.target.files) {
                            let filesAmount = event.target.files.length;
                            $('.upload-img').html("");

                            for (let i = 0; i < filesAmount; i++) {
                                let reader = new FileReader();
                                reader.onload = function (event) {
                                    let html = `
                        <div class="uploaded-img">
                            <img src="${event.target.result}">
                            <button type="button" class="remove-btn" data-index="${i}">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    `;
                                    $(".upload-img").append(html);
                                }
                                reader.readAsDataURL(event.target.files[i]);

                                addedFiles.push({ file: event.target.files[i], index: i });
                            }

                            $('.upload-info-value').text(filesAmount);
                            $('.upload-img').css('padding', "20px");
                        }
                    });
                    $(document).on('click', '.remove-btn', function () {
                        let index = $(this).data('index');
                        if (index !== undefined) {
                            // Find the file object by its index and remove it from the addedFiles array
                            addedFiles = addedFiles.filter(fileObj => fileObj.index !== index);

                            $(this).parent().remove();
                            $('.upload-info-value').text(addedFiles.length);
                        }
                    });

                });

                document.querySelector('.product-form').addEventListener('submit', function (event) {
                    event.preventDefault(); // Prevent default form submission

                    // Create FormData object and append images
                    let formData = new FormData(this);
                    formData.delete('productImages');
                    addedFiles.forEach(file => {
                        formData.append('productImages', file.file);
                    });

                    // Reset error messages
                    const errorMessages = {
                        name: 'Please enter a name',
                        description: 'Please enter a description',
                        brand: 'Please enter a brand name',
                        price: 'Price must be a positive number',
                        gender: 'Please select a gender',
                        category: 'Please select a category',
                        stockCount: 'Please enter a valid stock count',
                        size: 'Please select a size',
                        fit: "Fit is required",
                        fabric: "Fabric is required",
                        sleeve: "Please choose a sleeve type",
                        pattern: "Pattern is required",
                        color: "Color is required",
                        fabricCare: "Fabric Care is required",
                        origin: "Origin is required",

                    };

                    // Validate form fields
                    let errors = false;
                    if (!formData.get('name').trim()) {
                        toggleError('name', errorMessages.name);
                        errors = true;
                    }
                    if (!formData.get('brand').trim()) {
                        toggleError('brand', errorMessages.brand);
                        errors = true;
                    }
                    if (!formData.get('description').trim()) {
                        toggleError('description', errorMessages.description);
                        errors = true;
                    }
                    if (!priceRegex.test(formData.get('price')) || isNaN(formData.get('price')) || formData.get('price') <= 0) {
                        toggleError('price', errorMessages.price);
                        errors = true;
                    }

                    if (formData.get('gender') === '') {
                        toggleError('gender', errorMessages.gender);
                        errors = true;
                    }
                    if (formData.get('category') === '') {
                        toggleError('category', errorMessages.category);
                        errors = true;
                    }
                    if (!priceRegex.test(formData.get('price')) || isNaN(formData.get('stockCount')) || formData.get('stockCount') <= 0) {
                        toggleError('stockCount', errorMessages.stockCount);
                        errors = true;
                    }
                    if (formData.get('size') === '') {
                        toggleError('size', errorMessages.size);
                        errors = true;
                    }

                    if (!formData.get('fit').trim()) {
                        toggleError('fit', errorMessages.fit);
                        errors = true;
                    }

                    if (!formData.get('fabric').trim()) {
                        toggleError('fabric', errorMessages.fabric);
                        errors = true;
                    }

                    if (formData.get('sleeve') === '') {
                        toggleError('sleeve', errorMessages.sleeve);
                        errors = true;
                    }

                    if (!formData.get('pattern').trim()) {
                        toggleError('pattern', errorMessages.pattern);
                        errors = true;
                    }

                    if (!formData.get('color').trim()) {
                        toggleError('color', errorMessages.color);
                        errors = true;
                    }

                    if (!formData.get('fabricCare').trim()) {
                        toggleError('fabricCare', errorMessages.fabricCare);
                        errors = true;
                    }

                    if (!formData.get('origin').trim()) {
                        toggleError('origin', errorMessages.origin);
                        errors = true;
                    }


                    if (errors) {
                        return false; // Prevent form submission if there are errors
                    }

                    // Post form data
                    axios.put('/admin/product/editproduct/<%= product._id %>', formData)
                        .then(res => {
                            if (res.data.status) {

                                Swal.fire({
                                    icon: "success",
                                    title: "Product Updated Successfully",
                                    showConfirmButton: false,
                                    timer: 2000
                                });
                                setTimeout(() => {
                                    location.href = res.data.url;
                                }, 2000);
                            }
                        })
                        .catch(err => {
                            if (!err.response.data.success) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: err.response.data.message,
                                });
                            }
                        });
                });

                function toggleError(field, message) {
                    const errorField = document.getElementById(`${field}-error`);
                    if (errorField) {
                        errorField.textContent = message;
                    }
                }
                $('#editProduct input, #editProduct textarea, #editProduct select').on('input change', function () {
                    let field = this.name;
                    toggleError(field, '');
                });

                function deleteImage(productId, photoName, productPhotoLength) {
                    if (productPhotoLength <= 1) {
                        const warningMessage = 'At least 1 photo is required. You can only delete photos when there are 2 or more.';
                        $('#productImages-error').text(warningMessage).show();
                        return;
                    }
                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'You won\'t be able to revert this!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            axios.delete(`/admin/product/deletephoto/${productId}/${photoName}`)
                                .then(res => {
                                    if (res.data.success) {
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Success',
                                            text: 'Photo deleted successfully'
                                        }).then(() => {
                                            window.location.reload();
                                        });
                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Error',
                                            text: res.data.message
                                        });
                                    }
                                })
                                .catch(err => {
                                    // Show error alert
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'Failed to delete photo. Please try again later.'
                                    });
                                });
                        }
                    });
                }



            </script>