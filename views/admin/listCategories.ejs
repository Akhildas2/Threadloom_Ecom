<%- include('../adminLayouts/header.ejs') %>
    <%- include('../adminLayouts/navbar.ejs') %>
    <style>
        /* Modal colors */
        .modal-content {
            background-color: #ffffff;

        }

        .modal-header {
            background-color: #088178;
        }
    </style>
        <section class="content-main">
            <div class="container">
                <div class="content-header">
                    <h2 class="content-title card-title">Manage Categories</h2>
                </div>
                <div class="col-md-12 mb-6 text-end">
                    <a href="/admin/category/addcategory" class="btn btn-primary btn-sm add-category">Add Category</a>
                </div>
                <br>
                <!-- List Categories -->
                <div class="row">
                    <h3 class="content-title card-title" style="text-align: center;">Categories List :</h3>
                    <% if (categories.length===0) { %>
                        <div class="alert alert-info" role="alert">
                            No categories found.Please add categories.
                        </div>

                        <% } else { %>
                            <% for (let i=0; i < categories.length; i++) { %>
                                <div class="col-md-4 col-sm-6 col-12 mb-4">
                                    <div class="category-box">
                                        <h4 class="content-title card-title" style="text-align: center;">Category <%= i
                                                + 1 %>
                                        </h4>
                                        <div class="category-info">
                                            <h3>
                                                <%= categories[i].categoryName %>
                                            </h3>
                                            <img src="/uploads/category/resized/<%= categories[i].categoryPhoto %>"
                                                alt="Category Photo">
                                        </div>
                                        <div class="category-offer" style="text-align: center;">
                                            <% if (!categories[i].isUnlisted ) { %>
                                                <% if (!categories[i].offer ) { %>
                                                    <button class="btn btn-success btn-sm rounded add-category"
                                                        data-toggle="modal" data-target="#addOfferModal"
                                                        data-category-id="<%= categories[i]._id %>">Add offer</button>

                                                    <% } else { %>
                                                        <button class="btn btn-danger btn-sm remove-offer"
                                                            data-category-id="<%= categories[i]._id %>">Remove
                                                            offer</button>

                                                        <% } %>
                                                            <% } %>
                                        </div>
                                        <div class="category-actions col-12">
                                            <a href="#" class="btn btn-primary btn-sm edit-category "
                                                data-category-id="<%= categories[i]._id %>">Edit</a>
                                            <% if (!categories[i].isUnlisted) { %>
                                                <button type="submit" class="btn btn-warning btn-sm unlist-category"
                                                    data-category-id="<%= categories[i]._id %>">Unlist</button>
                                                <% } else { %>
                                                    <button class="btn btn-danger btn-lg btn-list"
                                                        data-category-id="<%= categories[i]._id %>">List</button>
                                                    <% } %>
                                        </div>
                                    </div>
                                </div>
                                <% } %>
                                    <% } %>

                </div>
            </div>
                <!-- Pagination -->
        <div class="pagination-area mt-30 mb-50">
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-end">
                    <% if (currentPage> 1) { %>
                        <li class="page-item"><a class="page-link" href="?page=1"><i
                                    class="material-icons md-chevron_left"></i></a></li>
                        <% } %>
                            <% for (let i=1; i <=totalPages; i++) { %>
                                <% if (i===currentPage) { %>
                                    <li class="page-item active"><a class="page-link" href="#">
                                            <%= i %>
                                        </a></li>
                                    <% } else { %>
                                        <li class="page-item"><a class="page-link"
                                                href="?page=<%= i %>">
                                                <%= i %>
                                            </a></li>
                                        <% } %>
                                            <% } %>
                                                <% if (currentPage < totalPages) { %>
                                                    <li class="page-item"><a class="page-link"
                                                            href="?page=<%= totalPages %>"><i
                                                                class="material-icons md-chevron_right"></i></a>
                                                    </li>
                                                    <% } %>
                </ul>
            </nav>
        </div>
        </section>
        <!-- listOfferModal.ejs -->
        <div class="modal" id="addOfferModal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Select an Offer</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <% offers.forEach(offer => { %>
                                <div class="col-md-6">
                                    <div class="card mb-4">
                                        <div class="card-body">
                                            <% const today = new Date(); %>
                                            <% const offerDate = new Date(offer.endingDate); %>
                                            <% if (offerDate >= today) { %>
                                                <div class="form-check">
                                                    <input class="form-check-input" type="radio" name="selectedOffer" id="offer-<%= offer._id %>" value="<%= offer._id %>">
                                                    <label class="form-check-label" for="offer-<%= offer._id %>">
                                                        <h5 class="card-title">
                                                            <%= offer.offerName %>
                                                        </h5>
                                                    </label>
                                                </div>
                                            <% } else { %>
                                                <h5 class="card-title">
                                                    <%= offer.offerName %>
                                                </h5>
                                            <% } %>
                                            <p class="card-text">
                                                Starting Date: <%= offer.startingDate.toLocaleDateString() %> <br>
                                                Ending Date: <%= offer.endingDate.toLocaleDateString() %> <br>
                                                Discount: <%= offer.discount %>%
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            <% }) %>
                        </div>
                    </div>
                    <div id="offerError" class="text-danger" style="display: none; text-align: center;"></div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" id="addOfferBtn">Add Offer</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- Include jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Include Bootstrap JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.bundle.min.js"></script>


        <!-- Add SweetAlert -->
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

        <!-- Add Axios -->
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const editButtons = document.querySelectorAll('.edit-category');
                const unlistButtons = document.querySelectorAll('.unlist-category');

                editButtons.forEach(button => {
                    button.addEventListener('click', function (event) {
                        event.preventDefault();
                        const categoryId = this.getAttribute('data-category-id');
                        Swal.fire({
                            title: 'Are you sure you want to edit this category?',
                            icon: 'question',
                            showCancelButton: true,
                            confirmButtonText: 'Yes, edit it!',
                            cancelButtonText: 'Cancel'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = `/admin/category/editcategory/${categoryId}`;
                            }
                        });
                    });
                });

                unlistButtons.forEach(button => {
                    button.addEventListener('click', function (event) {
                        event.preventDefault();
                        const categoryId = this.getAttribute('data-category-id');
                        Swal.fire({
                            title: 'Are you sure you want to unlist this category?',
                            icon: 'question',
                            showCancelButton: true,
                            confirmButtonText: 'Yes, unlist it!',
                            cancelButtonText: 'Cancel'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                axios.put(`/admin/category/unlistCategories/${categoryId}`)
                                    .then(response => {
                                        Swal.fire({
                                            title: 'Category Unlisted Successfully!',
                                            icon: 'success'
                                        }).then(() => {
                                            setTimeout(() => {
                                                window.location.href = response.data.url;
                                            }, 1000);
                                        });
                                    })
                                    .catch(error => {
                                        Swal.fire({
                                            title: 'Error',
                                            text: 'An error occurred while unlisting the category.',
                                            icon: 'error'
                                        });
                                        console.error('Error:', error);
                                    });
                            }
                        });
                    });
                });

                const listButtons = document.querySelectorAll('.btn-list');

                listButtons.forEach(button => {
                    button.addEventListener('click', function () {
                        const categoryId = this.getAttribute('data-category-id');

                        Swal.fire({
                            title: 'Are you sure you want to list this category?',
                            icon: 'question',
                            showCancelButton: true,
                            confirmButtonText: 'Yes, List it!',
                            cancelButtonText: 'Cancel'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                axios.put(`/admin/category/listCategories/${categoryId}`)
                                    .then(response => {
                                        Swal.fire({
                                            title: 'Category Listed Successfully!',
                                            icon: 'success'
                                        }).then(() => {
                                            setTimeout(() => {
                                                window.location.href = response.data.url;
                                            }, 1000);
                                        });
                                    })
                                    .catch(error => {
                                        Swal.fire({
                                            title: 'Error',
                                            text: 'An error occurred while listing the category.',
                                            icon: 'error'
                                        });
                                        console.error('Error:', error);
                                    });
                            }
                        });
                    });
                });
            });


            $(document).ready(function () {
                // Add click event listener for "Add offer" button
                $('.add-category').click(function () {
                    const categoryId = $(this).data('category-id');
                    $('#addOfferModal').data('category-id', categoryId); // Store the product ID in the modal data
                    $('#addOfferModal').modal('show'); // Show the modal
                });
                $('.close').click(function () {
                    $('#addOfferModal').modal('hide');

                    $('#addOfferModal').on('hidden.bs.modal', function (e) {
                        // Remove the modal backdrop
                        $('.modal-backdrop').remove();
                    });
                });
                // Handle "Add Offer" button click inside the modal
                $('#addOfferBtn').click(function () {
                    const categoryId = $('#addOfferModal').data('category-id');
                    const selectedOfferId = $('input[name="selectedOffer"]:checked').val();

                    let isValid = true;
                    let errorMessage = '';
                    // Check if an offer is selected
                    if (!selectedOfferId) {
                        isValid = false;
                        errorMessage = 'Please select an offer.';
                        $('#offerError').text(errorMessage).show();
                    } else {
                        $('#offerError').hide();
                    }
                    if (isValid) {
                        axios.put(`/admin/category/${categoryId}/addOffer`, { offerId: selectedOfferId })
                            .then(response => {
                                Swal.fire({
                                    title: 'Offer Added Successfully!',
                                    icon: 'success'
                                }).then(() => {
                                    setTimeout(() => {
                                        window.location.href = response.data.url;
                                    }, 1000);
                                });
                            })
                            .catch(error => {
                                Swal.fire({
                                    title: 'Error',
                                    text: 'An error occurred while adding the offer.',
                                    icon: 'error'
                                });
                                console.error('Error:', error);
                            });

                    }
                });
            });
            document.addEventListener('DOMContentLoaded', function () {
                const removeOfferButtons = document.querySelectorAll('.remove-offer');

                removeOfferButtons.forEach(button => {
                    button.addEventListener('click', function () {
                        const categoryId = this.getAttribute('data-category-id');

                        Swal.fire({
                            title: 'Are you sure you want to remove offer from this category?',
                            icon: 'question',
                            showCancelButton: true,
                            confirmButtonText: 'Yes, Remove it!',
                            cancelButtonText: 'Cancel'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                axios.put(`/admin/category/removeOffer/${categoryId}`)
                                    .then(response => {
                                        // Handle success response
                                        Swal.fire({
                                            title: 'Offer removed Successfully!',
                                            icon: 'success'
                                        }).then(() => {
                                            setTimeout(() => {
                                                window.location.href = response.data.url; // Redirect to the URL received from the server
                                            }, 1000); // Add a time delay for redirecting
                                        });
                                    })
                                    .catch(error => {
                                        // Handle error
                                        Swal.fire({
                                            title: 'Error',
                                            text: 'An error occurred while removing the offer.',
                                            icon: 'error'
                                        });
                                        console.error('Error:', error);
                                    });
                            }
                        });
                    });
                });
            });
        </script>

        <%- include('../adminLayouts/footer.ejs') %>